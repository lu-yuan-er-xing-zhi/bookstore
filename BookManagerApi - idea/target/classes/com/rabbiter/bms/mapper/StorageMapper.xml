<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rabbiter.bms.mapper.StorageMapper">
    <resultMap id="BaseResultMap" type="com.rabbiter.bms.model.Storage">
        <id column="warehouseId" jdbcType="INTEGER" property="warehouseid" />
        <result column="capacity" jdbcType="INTEGER" property="capacity" />
        <result column="bookId" jdbcType="INTEGER" property="bookid" />
        <result column="workerId" jdbcType="INTEGER" property="workerid" />
        <result column="bookName" jdbcType="VARCHAR" property="bookname" />
        <result column="site" jdbcType="VARCHAR" property="site" />
        <result column="inputTime" jdbcType="DATE" property="inputtime" />
    </resultMap>
<!--    <sql id="Base_Column_List">-->
<!--        warehouseId, capacity, bookId, workerId, bookName, site, inputTime-->
<!--    </sql>-->
    <insert id="insertSelective" parameterType="com.rabbiter.bms.model.Storage">
        insert into storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="warehouseid != null">
                warehouseId,
            </if>
            <if test="capacity != null">
                capacity,
            </if>
            <if test="bookid != null">
                bookId,
            </if>
            <if test="workerid != null">
                workerId,
            </if>
            <if test="bookname != null">
                bookName,
            </if>
            <if test="site != null">
                site,
            </if>
            <if test="inputtime != null">
                inputTime,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="warehouseid != null">
                #{warehouseid,jdbcType=INTEGER},
            </if>
            <if test="capacity != null">
                #{capacity,jdbcType=INTEGER},
            </if>
            <if test="bookid != null">
                #{bookid,jdbcType=INTEGER},
            </if>
            <if test="workerid != null">
                #{workerid,jdbcType=INTEGER},
            </if>
            <if test="bookname != null">
                #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="site != null">
                #{site,jdbcType=VARCHAR},
            </if>
            <if test="inputtime != null">
                #{inputtime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.rabbiter.bms.model.Storage">
        update storage
        <set>
            <if test="warehouseid != null">
                warehouseId = #{warehouseid,jdbcType=INTEGER},
            </if>
            <if test="capacity != null">
                capacity = #{capacity},
            </if>
            <if test="bookid != null">
                bookId = #{bookid,jdbcType=INTEGER},
            </if>
            <if test="workerid != null">
                workerId = #{workerid,jdbcType=INTEGER},
            </if>
            <if test="bookname != null">
                bookName = #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="site != null">
                site = #{site,jdbcType=VARCHAR},
            </if>
            <if test="inputtime != null">
                inputTime = #{inputtime,jdbcType=VARCHAR},
            </if>
            <if test="buy_num != null">
                buy_num = #{buy_num},
            </if>

        </set>
        where bookId = #{bookid}
    </update>
    <update id="updateCapacity">
        update storage set capacity =#{capacity} where bookId=#{bookId}
    </update>
    <update id="updateBuy_num">
        update storage set buy_num=buy_num+#{buy_num} where bookId=#{bookId}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from storage
        where warehouseid = #{warehouseid,jdbcType=INTEGER}
    </delete>

    <select id="selectAll" resultMap="BaseResultMap">
        select warehouseId, capacity, bookId, workerId, bookName, site, inputTime
        from storage
    </select>
    <select id="selectBySearch" resultMap="BaseResultMap">
        select warehouseId, capacity, bookId, workerId, bookName, site, inputTime
        from storage
        <where>
            <if test="warehouseid != null and warehouseid != '' ">
                and warehouseId like concat('%',#{warehouseid},'%')
            </if>
            <if test="capacity != null and capacity != '' ">
                and capacity like concat('%',#{capacity},'%')
            </if>
            <if test="bookname != null and bookname != '' ">
                and bookName like concat('%',#{bookname},'%')
            </if>
        </where>
        limit #{begin}, #{size}
    </select>
    <select id="selectCountBySearch" resultType="int">
        select count(*) from book_info
        <where>
            <if test="warehouseid != null and warehouseid != '' ">
                and warehouseId like concat('%',#{warehouseid},'%')
            </if>
            <if test="capacity != null and capacity != '' ">
                and capacity like concat('%',#{capacity},'%')
            </if>
            <if test="bookname != null and bookname != '' ">
                and bookName = #{bookname}
            </if>
        </where>
    </select>
    <select id="selectCount" resultType="int">
        select count(*) from storage
    </select>

    <select id="get_capacity" resultType="java.lang.Integer">
        select capacity from storage where bookId=#{book_id}
    </select>


</mapper>
