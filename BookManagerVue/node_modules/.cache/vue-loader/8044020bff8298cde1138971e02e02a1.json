{"remainingRequest":"D:\\BookManager\\BookManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\BookManager\\BookManagerVue\\src\\views\\storage\\index.vue?vue&type=style&index=0&id=652ce194&scoped=true&lang=css&","dependencies":[{"path":"D:\\BookManager\\BookManagerVue\\src\\views\\storage\\index.vue","mtime":1719129672984},{"path":"D:\\BookManager\\BookManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1713778496000},{"path":"D:\\BookManager\\BookManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1713778512000},{"path":"D:\\BookManager\\BookManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1713778504000},{"path":"D:\\BookManager\\BookManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713778494000},{"path":"D:\\BookManager\\BookManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1713778512000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkIHsNCiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7DQogIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQ6aG92ZXIgew0KICBib3JkZXItY29sb3I6ICM0MDllZmY7DQp9DQouYXZhdGFyLXVwbG9hZGVyLWljb24gew0KICBmb250LXNpemU6IDI4cHg7DQogIGNvbG9yOiAjOGM5MzlkOw0KICB3aWR0aDogMTc4cHg7DQogIGhlaWdodDogMTc4cHg7DQogIGxpbmUtaGVpZ2h0OiAxNzhweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmF2YXRhciB7DQogIHdpZHRoOiAxNTBweDsNCiAgaGVpZ2h0OiAyMDBweDsNCiAgZGlzcGxheTogYmxvY2s7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingshBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/storage","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n      <!-- 顶部功能 -->\r\n      <div class=\"filter-container\" style=\"margin-bottom: 15px\">\r\n          <!-- 书名输入 -->\r\n          <el-input\r\n              v-model=\"queryParam.bookname\"\r\n              placeholder=\"书名\"\r\n              style=\"width: 200px\"\r\n              class=\"filter-item\"\r\n              @keyup.enter.native=\"handleFilter\"\r\n          />\r\n          <!-- 作者输入 -->\r\n          <el-input\r\n              v-model=\"queryParam.bookauthor\"\r\n              placeholder=\"作者\"\r\n              style=\"width: 200px\"\r\n              class=\"filter-item\"\r\n              @keyup.enter.native=\"handleFilter\"\r\n          />\r\n          <!-- 类型选择 -->\r\n          <el-select\r\n              v-model=\"queryParam.booktypeid\"\r\n              filterable\r\n              placeholder=\"类型\"\r\n              clearable\r\n              class=\"filter-item\"\r\n              style=\"width: 200px\"\r\n          >\r\n              <el-option\r\n                  v-for=\"item in typeData\"\r\n                  :key=\"item.booktypeid\"\r\n                  :label=\"item.booktypename\"\r\n                  :value=\"item.booktypeid\"\r\n              />\r\n          </el-select>\r\n          <!-- 一些按钮 -->\r\n          <br />\r\n          <br />\r\n          <el-button\r\n              v-waves\r\n              style=\"font-size: 18px\"\r\n              class=\"filter-item\"\r\n              type=\"primary\"\r\n              @click=\"handleFilter\"\r\n          >\r\n              搜索\r\n          </el-button>\r\n          <el-button\r\n              v-waves\r\n              style=\"font-size: 18px\"\r\n              class=\"filter-item\"\r\n              type=\"primary\"\r\n              @click=\"handleFilter\"\r\n          >\r\n\r\n              显示全部\r\n          </el-button>\r\n\r\n\r\n      </div>\r\n\r\n      <!--弹出框-->\r\n      <el-dialog\r\n          :title=\"formTitle\"\r\n          :visible.sync=\"dialogFormVisible\"\r\n          width=\"40%\"\r\n      >\r\n          <el-row>\r\n              <el-col :span=\"16\">\r\n                  <!--普通表单-->\r\n                  <el-form\r\n                      :model=\"form\"\r\n                      :rules=\"rules\"\r\n                      ref=\"ruleForm\"\r\n                      label-width=\"80px\">\r\n\r\n                      <el-form-item label=\"库存量\" prop=\"capacity\">\r\n                          <el-input v-model=\"form.capacity\"></el-input>\r\n                      </el-form-item>\r\n\r\n\r\n                  </el-form>\r\n              </el-col>\r\n\r\n\r\n          </el-row>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button\r\n                  @click=\"dialogFormVisible = false\"\r\n                  style=\"font-size: 18px\">\r\n              取 消\r\n              </el-button>\r\n              <el-button\r\n                  type=\"primary\"\r\n                  @click=\"submitForm\"\r\n                  style=\"font-size: 18px\">\r\n                  确 定11\r\n              </el-button>\r\n          </div>\r\n      </el-dialog>\r\n\r\n      <!--弹出框2-->\r\n      <el-dialog\r\n          title=\"选择用户\"\r\n          :visible.sync=\"dialogFormVisible2\"\r\n          width=\"400px\"\r\n      >\r\n          <el-form :model=\"form2\">\r\n              <el-form-item label=\"用户名\" prop=\"userid\" label-width=\"80px\">\r\n                  <el-select\r\n                      v-model=\"form2.booktypeid\"\r\n                      placeholder=\"请选择用户\"\r\n                  >\r\n                      <el-option\r\n                          v-for=\"item in userData\"\r\n                          :key=\"item.userid\"\r\n                          :label=\"item.username\"\r\n                          :value=\"item.userid\"\r\n                      >\r\n                      </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n          </el-form>\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button\r\n                  @click=\"dialogFormVisible2 = false\"\r\n                  style=\"font-size: 18px\"\r\n              >\r\n\r\n                  取 消</el-button\r\n              >\r\n              <el-button\r\n                  type=\"primary\"\r\n                  @click=\"submitForm\"\r\n                  style=\"font-size: 18px\">\r\n                  确 定</el-button>\r\n          </div>\r\n      </el-dialog>\r\n\r\n      <!--数据表格-->\r\n      <el-table\r\n          ref=\"multipleTable\"\r\n          :data=\"tableData\"\r\n          border\r\n          style=\"width: 100%\"\r\n      >\r\n          <el-table-column fixed type=\"selection\" width=\"55\">\r\n          </el-table-column>\r\n          <el-table-column fixed prop=\"warehouseid\" label=\"仓库号\" width=\"100\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"bookid\" label=\"图书序号\" width=\"120\" sortable>\r\n          </el-table-column>\r\n\r\n\r\n          <el-table-column\r\n              v-if=\"roleIsAdmin === false\"\r\n              label=\"图书封面\"\r\n              width=\"155\"\r\n          >\r\n              <template slot-scope=\"scope\">\r\n                  <el-image\r\n                      :src=\"$store.state.settings.baseApi + scope.row.bookimg\"\r\n                      style=\"width: 130px; height: 180px\"\r\n                  ></el-image>\r\n              </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"bookname\"\r\n              label=\"图书名称\"\r\n              width=\"150\"\r\n              show-overflow-tooltip\r\n          >\r\n          </el-table-column>\r\n\r\n\r\n          <el-table-column\r\n              prop=\"capacity\"\r\n              label=\"库存量\"\r\n              width=\"100\"\r\n              show-overflow-tooltip\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"inputtime\"\r\n              label=\"入库时间\"\r\n              min-width=\"300\"\r\n              show-overflow-tooltip>\r\n\r\n          </el-table-column>\r\n          <el-table-column label=\"库存地点\" width=\"100\" prop=\"site\">\r\n\r\n          </el-table-column>\r\n          <el-table-column\r\n              fixed=\"right\"\r\n              label=\"操作\"\r\n              width=\"130\"\r\n          >\r\n              <template slot-scope=\"scope\">\r\n                  <el-button\r\n                      v-permission=\"['admin','worker']\"\r\n                      @click=\"handleUpdate(scope.row)\"\r\n                      type=\"primary\"\r\n                      style=\"font-size: 18px\">\r\n                      编辑</el-button>\r\n\r\n\r\n\r\n              </template>\r\n          </el-table-column>\r\n      </el-table>\r\n\r\n      <!--分页条-->\r\n      <el-pagination\r\n          background\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"queryParam.page\"\r\n          :page-sizes=\"[5, 10, 20, 50]\"\r\n          :page-size=\"queryParam.limit\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"recordTotal\"\r\n          style=\"margin-top: 15px\"\r\n      >\r\n      </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport permission from \"@/directive/permission/index.js\"; // 权限判断指令\r\nimport waves from \"@/directive/waves\"; // waves directive\r\n\r\nimport {\r\n  getCount,\r\n  queryStoragesByPage,\r\n  addStorage,\r\n  deleteBookInfo,\r\n  deleteBookInfos,\r\n  updateStorage,\r\n  queryStorage,\r\n} from \"@/api/storage\";\r\nimport { queryBookTypes } from \"@/api/booktype\";\r\nimport { borrowBook } from \"@/api/borrow\";\r\nimport { queryUsers } from \"@/api/user\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Storage\",\r\n  directives: { waves, permission },\r\n  // 创建后\r\n  created() {\r\n      // 从服务器获取数据表格第一页的信息\r\n      queryStoragesByPage(this.queryParam).then((res) => {\r\n          console.log(\"首页数据获取成功\", res);\r\n          this.tableData = res.data;\r\n          this.recordTotal = res.count;\r\n      });\r\n      // 从服务器获取所有的图书类型\r\n      queryBookTypes().then((res) => {\r\n          console.log(\"图书类型获取成功\", res);\r\n          this.typeData = res;\r\n      });\r\n  },\r\n  mounted() {\r\n      if (this.roleIsAdmin === false) {\r\n          this.queryParam.limit = 5;\r\n          this.handleSizeChange(this.queryParam.limit);\r\n      }\r\n  },\r\n  methods: {\r\n      // 分页大小改变监听\r\n      handleSizeChange(curSize) {\r\n          const params = this.queryParam;\r\n          params.limit = curSize;\r\n          queryStoragesByPage(params).then((res) => {\r\n              console.log(\"分页数据获取成功\", res);\r\n              this.tableData = res.data;\r\n              this.recordTotal = res.count;\r\n          });\r\n      },\r\n\r\n      // 点击分页监听方法\r\n      handleCurrentChange(curPage) {\r\n          const params = this.queryParam;\r\n          params.page = curPage;\r\n\r\n          queryStoragesByPage(params).then((res) => {\r\n              console.log(\"分页数据获取成功\", res);\r\n              this.tableData = res.data;\r\n              this.recordTotal = res.count;\r\n          });\r\n      },\r\n\r\n      // 搜索图书\r\n      handleFilter() {\r\n          this.queryParam.page = 1;\r\n          queryStoragesByPage(this.queryParam).then((res) => {\r\n              if (res.code === 0) {\r\n                  this.tableData = res.data;\r\n                  this.recordTotal = res.count;\r\n              }\r\n          });\r\n      },\r\n\r\n      // 显示全部\r\n      handleShowAll() {\r\n          this.queryParam.page = 1;\r\n          this.queryParam.warehouseid = null;\r\n          this.queryParam.bookid = null;\r\n          this.queryParam.bookname = null;\r\n          queryStorage(this.queryParam).then((res) => {\r\n              if (res.code === 0) {\r\n                  this.tableData = res.data;\r\n                  this.recordTotal = res.count;\r\n              }\r\n          });\r\n      },\r\n\r\n\r\n      // 点击添加记录\r\n      handleCreate() {\r\n          // 从服务器获取所有的图书类型\r\n          queryStorage().then((res) => {\r\n              console.log(\"图书类型获取成功\", res);\r\n              this.typeData = res;\r\n          });\r\n          // 表单是添加状态\r\n          this.formType = 0;\r\n          // 将空数据置入form\r\n          this.form = {\r\n              warehouseid: null,\r\n              capacity: \"\",\r\n              bookid: \"\",\r\n              workerid: \"1\",\r\n              bookname: \"\",\r\n              site: 0,\r\n              inputtime: \"\",\r\n          };\r\n          // 显示表单框\r\n          this.dialogFormVisible = true;\r\n      },\r\n\r\n      // 点击编辑记录\r\n      handleUpdate(row) {\r\n          // 从服务器获取所有的图书类型\r\n          queryStorage().then((res) => {\r\n              console.log(\"图书类型获取成功\", res);\r\n              this.typeData = res;\r\n          });\r\n          // 表单是编辑状态\r\n          this.formType = 1;\r\n          // 将行数据置入form\r\n          this.form = {\r\n              warehouseid: row.warehouseid,\r\n              capacity: row.capacity,\r\n              bookid: row.bookid,\r\n              workerid: row.workerid,\r\n              bookname: row.bookname,\r\n              site: row.site,\r\n              inputtime: row.inputtime,\r\n          };\r\n          // 显示表单框\r\n          this.dialogFormVisible = true;\r\n      },\r\n\r\n      // 添加和更新的提交表单\r\n      submitForm() {\r\n        console.log(this.form)\r\n          // if (this.formType === 0) {\r\n          //     // 添加记录\r\n          //     addBookInfo(this.form).then((res) => {\r\n          //         if (res === 1) {\r\n          //             this.$message.success(\"添加记录成功\");\r\n          //             // 跳转到末尾\r\n          //             getCount().then((res) => {\r\n          //                 this.recordTotal = res;\r\n          //                 this.queryParam.page = 1;\r\n          //                 this.handleCurrentChange(this.queryParam.page);\r\n          //             });\r\n          //         } else {\r\n          //             this.$message.error(\"添加记录失败\");\r\n          //         }\r\n          //         this.dialogFormVisible = false; // 关闭对话框\r\n          //     });\r\n          // } else if (this.formType === 1) {\r\n          //     //更新记录\r\n          //     updateStorage(this.form).then((res) => {\r\n          //         if (res === 1 || res === 0) {\r\n          //             this.$message.success(\"更新记录成功\");\r\n          //             this.handleCurrentChange(this.queryParam.page);\r\n          //         } else {\r\n          //             this.$message.error(\"更新记录失败\");\r\n          //         }\r\n          //         this.dialogFormVisible = false; // 关闭对话框\r\n          //     });\r\n          // }\r\n        const response =  axios.post('http://localhost:9111/BookManager/storage/updateStorage', {\r\n            capacity : this.form.capacity,\r\n            bookid:this.form.bookid\r\n        });\r\n        this.dialogFormVisible = false; // 关闭对话框\r\n        location.reload()\r\n        console.log(response)\r\n      },\r\n\r\n    //   // 删除记录\r\n    //   handleDelete(row, index) {\r\n    //       this.$confirm(\"确定要删除该条记录吗?\", \"提示\", {\r\n    //           confirmButtonText: \"确定\",\r\n    //           cancelButtonText: \"取消\",\r\n    //           type: \"warning\",\r\n    //       }).then(() => {\r\n    //           deleteBookInfo(row).then((res) => {\r\n    //               if (res === 1) {\r\n    //                   this.$message.success(\"删除记录成功\");\r\n    //                   this.tableData.splice(index, 1);\r\n    //                   // 如果删完了，获取上一页\r\n    //                   if (this.tableData.length === 0) {\r\n    //                       this.queryParam.page = this.queryParam.page - 1;\r\n    //                       this.handleCurrentChange(this.queryParam.page);\r\n    //                   }\r\n    //               } else if (res === -1) {\r\n    //                   this.$message.error(\r\n    //                       \"该图书存在与读者的借阅信息，请尝试先删除所有的本图书借阅信息再重试\"\r\n    //                   );\r\n    //               } else {\r\n    //                   this.$message.error(\"删除记录失败\");\r\n    //               }\r\n    //           });\r\n    //       });\r\n    //   },\r\n\r\n    //   // 删除一些\r\n    //   handleDeleteSome() {\r\n    //       this.$confirm(\"确定要删除这些记录吗?\", \"提示\", {\r\n    //           confirmButtonText: \"确定\",\r\n    //           cancelButtonText: \"取消\",\r\n    //           type: \"warning\",\r\n    //       }).then(() => {\r\n    //           // 获取选中的对象数组\r\n    //           const items = this.$refs.multipleTable.selection;\r\n    //           deleteBookInfos(items).then((res) => {\r\n    //               if (res > 0) {\r\n    //                   this.$message.success(\"删除\" + res + \"条记录成功\");\r\n    //                   if (this.tableData.length === res) {\r\n    //                       //如果本页内容全部删光了\r\n    //                       //当前页为上一页\r\n    //                       if (this.queryParam.page !== 0) {\r\n    //                           this.queryParam.page = this.queryParam.page - 1;\r\n    //                       }\r\n    //                   }\r\n    //                   // 重载当前页\r\n    //                   this.handleCurrentChange(this.queryParam.page);\r\n    //               } else {\r\n    //                   this.$message.error(\"删除记录失败\");\r\n    //               }\r\n    //           });\r\n    //       });\r\n    //   },\r\n  },\r\n  data() {\r\n      return {\r\n          // 表格数据\r\n          tableData: [],\r\n          // 记录总数\r\n          recordTotal: 0,\r\n          // 图书类型数据\r\n          typeData: [],\r\n          // 用户数据\r\n          userData: [],\r\n          // 查询参数\r\n          queryParam: {\r\n              page: 1,\r\n              limit: 10,\r\n              bookname: null,\r\n              bookauthor: null,\r\n              booktypeid: null,\r\n          },\r\n          // 对话框表单显示\r\n          dialogFormVisible: false,\r\n          dialogFormVisible2: false,\r\n          // 表单类型（添加数据:0,修改数据:1）\r\n          formType: 0,\r\n          // 表单数据\r\n          form: {\r\n              warehouseid: null,\r\n              capacity: \"\",\r\n              bookid: 0,\r\n              workerid: 1,\r\n              bookname: \"\",\r\n              site: 0,\r\n              inputtime: \"\",\r\n          },\r\n          form2: {\r\n              userid: 1,\r\n              bookid: 1,\r\n          },\r\n          rules: {\r\n              bookname: [\r\n                  {\r\n                      required: true,\r\n                      message: \"请输入图书名称\",\r\n                      trigger: \"blur\",\r\n                  },\r\n              ],\r\n              bookauthor: [\r\n                  { required: true, message: \"请输入作者\", trigger: \"blur\" },\r\n              ],\r\n              bookprice: [\r\n                  { required: true, message: \"请输入价格\", trigger: \"blur\" },\r\n              ],\r\n              booktypeid: [\r\n                  { required: true, message: \"请选择类型\", trigger: \"blur\" },\r\n              ],\r\n              bookdesc: [\r\n                  { required: true, message: \"请输入描述\", trigger: \"blur\" },\r\n              ],\r\n              isborrowed: [\r\n                  { required: true, message: \"请选择状态\", trigger: \"blur\" },\r\n              ],\r\n          },\r\n      };\r\n  },\r\n  computed: {\r\n      // 获得user信息\r\n      ...mapGetters([\"id\", \"name\", \"roles\"]),\r\n      // 通过表单类型计算表单标题\r\n      formTitle() {\r\n          return this.formType === 0 ? \"添加记录\" : \"修改记录\";\r\n      },\r\n      roleIsAdmin() {\r\n          if (this.roles[0] === \"admin\") return true;\r\n          else if(this.roles[0] === \"worker\") return true;\r\n          else return false;\r\n      },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 150px;\r\n  height: 200px;\r\n  display: block;\r\n}\r\n</style>\r\n"]}]}